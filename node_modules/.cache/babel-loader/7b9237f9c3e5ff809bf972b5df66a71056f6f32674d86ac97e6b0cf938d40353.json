{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiril\\\\Desktop\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430\\\\test-task-valantis\\\\src\\\\components\\\\Products.jsx\";\nimport React from \"react\";\nimport Key from \"./Key\";\nimport ServerError from \"./ServerError\";\nimport AuthorizationError from \"./AuthorizationError\";\nimport Product from \"./Product\";\nimport Request from \"./Request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Products extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ids = [];\n    this.products = [];\n    this.state = {\n      error: null,\n      isLoaded: false,\n      ids: [],\n      items: [],\n      page: 0,\n      displayedIds: [],\n      limit: 50,\n      offset: 0\n    };\n    this.inputClick = this.inputClick.bind(this);\n    this.makeRequest = this.makeRequest.bind(this);\n    this.takeData = this.takeData.bind(this);\n    this.actualizateData = this.actualizateData.bind(this);\n  }\n  makeRequest(api, offset, limit) {\n    let apiBody = {\n      action: \"get_ids\",\n      params: {\n        offset: offset,\n        limit: limit\n      }\n    };\n    fetch(api, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n        'X-Auth': Key()\n      },\n      body: JSON.stringify(apiBody)\n    }).then(res => {\n      if (!res.ok) {\n        switch (res.status) {\n          case 500:\n            console.log(`Ошибка запроса id товаров. Код: ${res.status}`);\n            throw new ServerError();\n            break;\n          case 401:\n            console.log(`Ошибка запроса id товаров. Код: ${res.status}`);\n            throw new AuthorizationError();\n            break;\n          default:\n            break;\n        }\n        console.log(\"error1\");\n        console.log(\"res.status\");\n      } else {\n        return res;\n      }\n    }, e => {\n      throw e;\n    }).then(res => {\n      return res.json();\n    }, e => {\n      throw e;\n    }).then(resObj => {\n      let tempSet = new Set(resObj.result);\n      let result = Array.from(tempSet);\n      return result;\n    }, e => {\n      throw e;\n    }).then(uniqueRes => {\n      let apiBodyItems = {\n        action: \"get_items\",\n        params: {\n          ids: uniqueRes\n        }\n      };\n      fetch(api, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n          'X-Auth': Key()\n        },\n        body: JSON.stringify(apiBodyItems)\n      }).then(res => {\n        if (!res.ok) {\n          switch (res.status) {\n            case 500:\n              console.log(`Ошибка запроса данных товаров. Код: ${res.status}`);\n              throw new ServerError();\n              break;\n            case 401:\n              console.log(`Ошибка запроса данных товаров. Код: ${res.status}`);\n              throw new AuthorizationError();\n              break;\n            default:\n              break;\n          }\n          console.log(\"error2\");\n          console.log(\"res.status\");\n        } else {\n          return res;\n        }\n      }, e => {\n        throw e;\n      }).then(res => {\n        return res.json();\n      }, e => {\n        throw e;\n      }).then(result => {\n        const tempObj = {};\n        const uniqueRes = result.result.filter(({\n          id\n        }) => !tempObj[id] && (tempObj[id] = 1));\n        this.setState({\n          isLoaded: true,\n          items: uniqueRes\n        }, () => {\n          return uniqueRes;\n        });\n      }, e => {\n        this.setState({\n          isLoaded: false,\n          error: e\n        });\n      });\n    }, e => {\n      this.setState({\n        isLoaded: false,\n        error: e\n      });\n    });\n  }\n  async tekeIds() {\n    const idsFromResp = await Request('get_ids', {\n      offset: this.state.offset,\n      limit: this.state.limit\n    });\n    this.ids = idsFromResp;\n  }\n  async takeProducts() {\n    const productsFromResp = await Request('get_items', {\n      ids: this.ids\n    });\n    this.products = productsFromResp;\n  }\n  actualizateData() {\n    this.setState({\n      isLoaded: true,\n      ids: this.ids,\n      items: this.products\n    }, () => {\n      console.log(this.state.ids);\n      console.log(this.state.items);\n    });\n  }\n  takeData() {\n    this.setState({\n      offset: this.state.page * this.state.limit\n    }, () => {\n      //this.makeRequest(\"https://api.valantis.store:41000/\", this.state.offset, this.state.limit)\n\n      this.tekeIds().then(this.takeProducts().then(this.actualizateData()));\n    });\n  }\n  inputClick(direction) {\n    if (direction.target.className == 'buttonRight') {\n      this.setState({\n        page: this.state.page + 1,\n        isLoaded: false\n      }, () => {\n        console.log(this.state.page);\n        this.takeData();\n      });\n    } else if (direction.target.className == 'buttonLeft' && this.state.page > 0) {\n      this.setState({\n        page: this.state.page - 1,\n        isLoaded: false\n      }, () => {\n        console.log(this.state.page);\n        this.takeData();\n      });\n    }\n  }\n  componentDidMount() {}\n  componentWillUnmount() {\n    this.takeData();\n  }\n  render() {\n    let {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    if (error) {\n      if (error.name == \"Server Error\") {\n        this.state.error = null;\n        this.takeData();\n      }\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonLeft\",\n          onClick: this.inputClick,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonRight\",\n          onClick: this.inputClick,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonLeft\",\n          onClick: this.inputClick,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(Product, {\n            product: item\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonRight\",\n          onClick: this.inputClick,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\nexport default Products;","map":{"version":3,"names":["React","Key","ServerError","AuthorizationError","Product","Request","jsxDEV","_jsxDEV","Products","Component","constructor","props","ids","products","state","error","isLoaded","items","page","displayedIds","limit","offset","inputClick","bind","makeRequest","takeData","actualizateData","api","apiBody","action","params","fetch","method","headers","body","JSON","stringify","then","res","ok","status","console","log","e","json","resObj","tempSet","Set","result","Array","from","uniqueRes","apiBodyItems","tempObj","filter","id","setState","tekeIds","idsFromResp","takeProducts","productsFromResp","direction","target","className","componentDidMount","componentWillUnmount","render","name","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","product"],"sources":["C:/Users/kiril/Desktop/Практика/test-task-valantis/src/components/Products.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Key from \"./Key\";\r\nimport ServerError from \"./ServerError\";\r\nimport AuthorizationError from \"./AuthorizationError\";\r\nimport Product from \"./Product\";\r\nimport Request from \"./Request\";\r\n\r\nclass Products extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      ids: [],\r\n      items: [], \r\n      page: 0,\r\n      displayedIds: [],\r\n      limit: 50,\r\n      offset: 0,\r\n    };\r\n\r\n    this.inputClick = this.inputClick.bind(this)    \r\n    this.makeRequest = this.makeRequest.bind(this)\r\n    this.takeData = this.takeData.bind(this)\r\n    this.actualizateData = this.actualizateData.bind(this)\r\n\r\n  }\r\n  ids = []\r\n  products = []\r\n\r\n\r\n  \r\n\r\n  makeRequest(api, offset, limit) {\r\n\r\n      let apiBody = {\r\n        action: \"get_ids\",\r\n        params: {offset: offset, limit: limit}\r\n      }\r\n      fetch(api,\r\n      { method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n          'X-Auth': Key()\r\n        },\r\n        body: JSON.stringify(apiBody)\r\n      })\r\n        .then((res) => {\r\n          if(!res.ok) {\r\n            switch (res.status) {\r\n              case 500:\r\n                console.log(`Ошибка запроса id товаров. Код: ${res.status}`)\r\n                throw new ServerError\r\n                break;\r\n              case 401:\r\n                console.log(`Ошибка запроса id товаров. Код: ${res.status}`)\r\n                throw new AuthorizationError\r\n                break;\r\n            \r\n              default:\r\n                break;\r\n            }\r\n            \r\n            console.log(\"error1\")\r\n            console.log(\"res.status\")\r\n          } else {\r\n            return res\r\n          }\r\n        }, (e) => { throw e; })\r\n        .then((res) => {\r\n          return res.json()\r\n        }, (e) => { throw e; })\r\n        .then((resObj) => {\r\n          let tempSet = new Set(resObj.result)\r\n          let result = Array.from(tempSet)\r\n          return result\r\n          }, (e) => { throw e; })\r\n        .then(\r\n          (uniqueRes) => {\r\n          let apiBodyItems = {\r\n              action: \"get_items\",\r\n              params: {ids: uniqueRes}\r\n          };\r\n          fetch(api,\r\n            { method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                'X-Auth': Key()\r\n              },\r\n              body: JSON.stringify(apiBodyItems)\r\n            })\r\n            .then((res) => {\r\n              if(!res.ok) {\r\n                switch (res.status) {\r\n                  case 500:\r\n                    console.log(`Ошибка запроса данных товаров. Код: ${res.status}`)\r\n                    throw new ServerError\r\n                    break;\r\n                  case 401:\r\n                    console.log(`Ошибка запроса данных товаров. Код: ${res.status}`)\r\n                    throw new AuthorizationError\r\n                    break;\r\n                \r\n                  default:\r\n                    break;\r\n                }\r\n                \r\n                console.log(\"error2\")\r\n                console.log(\"res.status\")\r\n              } else {\r\n                return res\r\n              }\r\n            }, (e) => { throw e; })\r\n            .then((res) => {\r\n              return res.json();\r\n            }, (e) => { throw e; })\r\n            .then(\r\n              (result) => {\r\n                const tempObj = {};\r\n                const uniqueRes = result.result.filter(({id}) =>(!tempObj[id] && (tempObj[id] = 1)));\r\n  \r\n                this.setState({\r\n                  isLoaded: true,\r\n                  items: uniqueRes\r\n                },() => {\r\n                  return uniqueRes;\r\n                })\r\n          }, \r\n            (e) => {\r\n              this.setState({\r\n                isLoaded: false,\r\n                error: e\r\n              });\r\n            })\r\n          }, \r\n          (e) => {\r\n            this.setState({\r\n              isLoaded: false,\r\n              error: e\r\n            });\r\n\r\n          })\r\n\r\n  }\r\n  async tekeIds() {\r\n    const idsFromResp = await Request('get_ids', {offset: this.state.offset, limit: this.state.limit})\r\n    this.ids = idsFromResp\r\n  }\r\n\r\n  async takeProducts() {\r\n    const productsFromResp = await Request('get_items', {ids: this.ids})\r\n    this.products = productsFromResp\r\n  }\r\n\r\n  actualizateData() {\r\n    this.setState({\r\n      isLoaded: true,\r\n      ids: this.ids,\r\n      items: this.products\r\n    }, () => {\r\n      console.log(this.state.ids)\r\n      console.log(this.state.items)\r\n    })\r\n    \r\n  }\r\n\r\n  takeData() {\r\n    this.setState({\r\n      offset: this.state.page * this.state.limit,\r\n    }, () => {\r\n      //this.makeRequest(\"https://api.valantis.store:41000/\", this.state.offset, this.state.limit)\r\n\r\n      this.tekeIds().then(\r\n        this.takeProducts().then(this.actualizateData())\r\n      )\r\n    })\r\n\r\n  }\r\n  \r\n  inputClick(direction) {\r\n    if(direction.target.className == 'buttonRight') {\r\n      \r\n      \r\n      this.setState({\r\n        page: this.state.page + 1, \r\n        isLoaded: false\r\n      }, () => {\r\n        console.log(this.state.page)\r\n        \r\n        this.takeData()\r\n        \r\n      })\r\n        \r\n      \r\n    } else if(direction.target.className == 'buttonLeft' && this.state.page > 0) {\r\n      this.setState({\r\n        page: this.state.page - 1, \r\n        isLoaded: false\r\n      }, () => {\r\n        console.log(this.state.page)\r\n        this.takeData()\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n  componentWillUnmount() { \r\n    this.takeData()\r\n    \r\n  }\r\n  \r\n\r\n\r\n  render() {\r\n\r\n    let { error, isLoaded, items} = this.state;\r\n    if (error) {\r\n      if (error.name == \"Server Error\") {\r\n        this.state.error = null\r\n        this.takeData()\r\n      }\r\n    } else if (!isLoaded ) {\r\n      return (\r\n        <div className=\"wrapper\">\r\n          <button className=\"buttonLeft\" onClick={this.inputClick}>&lt;</button>\r\n            <div className=\"container\">\r\n              <div className=\"loading\">Загрузка...</div>\r\n            </div>\r\n          <button className=\"buttonRight\" onClick={this.inputClick}>&gt;</button>\r\n        </div>\r\n      );\r\n\r\n    } else {\r\n      return (\r\n        <div className=\"wrapper\">\r\n          <button className=\"buttonLeft\" onClick={this.inputClick}>&lt;</button>\r\n            <div className=\"container\">\r\n\r\n              {items.map(item => (\r\n                <Product key={item.id} product={item}/>\r\n              ))}\r\n            </div>\r\n          <button className=\"buttonRight\" onClick={this.inputClick}>&gt;</button>\r\n        </div>\r\n      );    }\r\n  }\r\n}\r\n\r\nexport default Products"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}