{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiril\\\\Desktop\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430\\\\test-task-valantis\\\\src\\\\components\\\\Ids.jsx\";\nimport React from \"react\";\nimport Key from \"./Key\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Ids extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      ids: [],\n      body: {\n        action: \"get_ids\",\n        params: {\n          offset: 0,\n          limit: 10\n        }\n      }\n    };\n  }\n  componentDidMount() {\n    console.log(Key());\n    fetch(\"https://api.valantis.store:41000/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n        'X-Auth': Key()\n      },\n      body: JSON.stringify(this.state.body)\n    }).then(res => res.json()).then(res => {\n      this.setState({\n        isLoaded: true,\n        ids: res.result.items\n      });\n    },\n    // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n    // чтобы не перехватывать исключения из ошибок в самих компонентах.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      ids\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ids.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" \", item.price]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\nexport default Ids;","map":{"version":3,"names":["React","Key","jsxDEV","_jsxDEV","Ids","Component","constructor","props","state","error","isLoaded","ids","body","action","params","offset","limit","componentDidMount","console","log","fetch","method","headers","JSON","stringify","then","res","json","setState","result","items","render","children","message","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","price","id"],"sources":["C:/Users/kiril/Desktop/Практика/test-task-valantis/src/components/Ids.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Key from \"./Key\";\r\n\r\nclass Ids extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      ids: [],\r\n      body: {\r\n        action: \"get_ids\",\r\n        params: {offset: 0, limit: 10}\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(Key())\r\n    fetch(\"https://api.valantis.store:41000/\",\r\n    { method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n        'X-Auth': Key()\r\n      },\r\n      body: JSON.stringify(this.state.body)\r\n    }\r\n    )\r\n      .then(res => res.json()\r\n      )\r\n      .then(\r\n        (res) => {\r\n          \r\n          this.setState({\r\n            isLoaded: true,\r\n            ids: res.result.items\r\n          });\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          \r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, ids } = this.state;\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Загрузка...</div>;\r\n    } else {\r\n      return (\r\n        <ul>\r\n          {ids.map(item => (\r\n            <li key={item.id}>\r\n              {item.name} {item.price}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Ids"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,GAAG,SAASJ,KAAK,CAACK,SAAS,CAAC;EAChCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,KAAK;MACfC,GAAG,EAAE,EAAE;MACPC,IAAI,EAAE;QACJC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE;UAACC,MAAM,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAE;MAC/B;IACF,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClBC,OAAO,CAACC,GAAG,CAAClB,GAAG,CAAC,CAAC,CAAC;IAClBmB,KAAK,CAAC,mCAAmC,EACzC;MAAEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,gCAAgC;QAChD,QAAQ,EAAErB,GAAG,CAAC;MAChB,CAAC;MACDW,IAAI,EAAEW,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChB,KAAK,CAACI,IAAI;IACtC,CACA,CAAC,CACEa,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CACtB,CAAC,CACAF,IAAI,CACFC,GAAG,IAAK;MAEP,IAAI,CAACE,QAAQ,CAAC;QACZlB,QAAQ,EAAE,IAAI;QACdC,GAAG,EAAEe,GAAG,CAACG,MAAM,CAACC;MAClB,CAAC,CAAC;IACJ,CAAC;IACD;IACA;IACCrB,KAAK,IAAK;MAET,IAAI,CAACmB,QAAQ,CAAC;QACZlB,QAAQ,EAAE,IAAI;QACdD;MACF,CAAC,CAAC;IACJ,CACF,CAAC;EACL;EAEAsB,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEtB,KAAK;MAAEC,QAAQ;MAAEC;IAAI,CAAC,GAAG,IAAI,CAACH,KAAK;IAC3C,IAAIC,KAAK,EAAE;MACT,oBAAON,OAAA;QAAA6B,QAAA,GAAK,wCAAQ,EAACvB,KAAK,CAACwB,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAC3C,CAAC,MAAM,IAAI,CAAC3B,QAAQ,EAAE;MACpB,oBAAOP,OAAA;QAAA6B,QAAA,EAAK;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAC/B,CAAC,MAAM;MACL,oBACElC,OAAA;QAAA6B,QAAA,EACGrB,GAAG,CAAC2B,GAAG,CAACC,IAAI,iBACXpC,OAAA;UAAA6B,QAAA,GACGO,IAAI,CAACC,IAAI,EAAC,GAAC,EAACD,IAAI,CAACE,KAAK;QAAA,GADhBF,IAAI,CAACG,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAET;EACF;AACF;AAEA,eAAejC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}