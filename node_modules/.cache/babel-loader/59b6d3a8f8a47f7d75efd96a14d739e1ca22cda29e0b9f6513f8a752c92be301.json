{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiril\\\\Desktop\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430\\\\test-task-valantis\\\\src\\\\components\\\\Navigation\\\\Navigation.jsx\";\nimport React from \"react\";\nimport NavigationButton from \"./NavigationButton\";\nimport Request from \"../Request\";\nimport Ellipses from \"../Ellipses\";\nimport filterDuplicates from \"../FilterDuplicates\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      arrOfPages: [],\n      pagesQuantity: 0,\n      maxLength: 10\n    };\n  }\n  countPages(type) {\n    switch (type) {\n      case 'all':\n        Request('get_ids', {\n          offset: 0\n        }).then(res => {\n          res = filterDuplicates(res);\n          this.setState({\n            arrOfPages: this.createArray(res.length / 50 - 1),\n            pagesQuantity: res.length / 50\n          }, () => {\n            this.props.changeParentValue({\n              productQuantity: this.state.pagesQuantity\n            });\n          });\n        }, e => {\n          this.handleError(e);\n        });\n        break;\n      case 'filtered':\n        this.setState({\n          pagesQuantity: Math.ceil(this.props.productQuantity / 50)\n        });\n        break;\n      default:\n        break;\n    }\n  }\n  handleError(e) {\n    if (e.name == \"Authorization Error\" || e.name == \"Server Error\") {\n      this.setState({\n        error: null\n      }, () => {\n        this.countPages();\n      });\n    }\n  }\n  createArray(length) {\n    let arrOfPages = [];\n    for (let i = 1; i < length; i++) {\n      arrOfPages.push([i]);\n    }\n    return arrOfPages;\n  }\n  /*   correctArray(arr) {\r\n      if (arr.length > this.state.maxLength) {\r\n        arr.splice(this.state.maxLength, arr.length - this.state.maxLength)\r\n      } \r\n      return arr\r\n    } */\n\n  componentDidMount() {}\n  componentWillUnmount() {\n    if (!this.state.arrOfPages.length) {\n      this.countPages('all');\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.productQuantity !== prevProps.productQuantity || this.props.name !== prevProps.name || this.props.price !== prevProps.price || this.props.brand !== prevProps.brand) {\n      if (this.props.name == null && this.props.price == null && this.props.brand == null) {\n        this.countPages('all');\n      } else {\n        this.countPages('filtered');\n      }\n    }\n  }\n  render() {\n    let {\n      error,\n      pagesQuantity,\n      lastPageQuantity,\n      arrOfPages\n    } = this.state;\n    if (error && !error.name == 'Server Error' && !error.name == 'Authorization Error') {\n      console.log(error);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }, this);\n    } else if (pagesQuantity == 1) {\n      return /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navigation-container\",\n        children: /*#__PURE__*/_jsxDEV(NavigationButton, {\n          id: 0,\n          page: this.props.page,\n          pagesQuantity: pagesQuantity,\n          lastPageQuantity: lastPageQuantity\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navigation-container\",\n        children: [/*#__PURE__*/_jsxDEV(NavigationButton, {\n          id: 0,\n          page: this.props.page,\n          pagesQuantity: pagesQuantity\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Ellipses, {\n          page: this.props.page,\n          id: 0,\n          maxLength: this.state.maxLength,\n          pagesQuantity: pagesQuantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), arrOfPages.map(item => /*#__PURE__*/_jsxDEV(NavigationButton, {\n          id: item[0],\n          page: this.props.page,\n          pagesQuantity: pagesQuantity\n        }, item[0], false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(Ellipses, {\n          page: this.props.page,\n          id: 1,\n          maxLength: this.state.maxLength,\n          pagesQuantity: pagesQuantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(NavigationButton, {\n          id: pagesQuantity - 1,\n          page: this.props.page,\n          pagesQuantity: pagesQuantity\n        }, pagesQuantity - 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this);\n    }\n  }\n}\nexport default Navigation;","map":{"version":3,"names":["React","NavigationButton","Request","Ellipses","filterDuplicates","jsxDEV","_jsxDEV","Navigation","Component","constructor","props","state","error","arrOfPages","pagesQuantity","maxLength","countPages","type","offset","then","res","setState","createArray","length","changeParentValue","productQuantity","e","handleError","Math","ceil","name","i","push","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","price","brand","render","lastPageQuantity","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","page","map","item"],"sources":["C:/Users/kiril/Desktop/Практика/test-task-valantis/src/components/Navigation/Navigation.jsx"],"sourcesContent":["import React from \"react\"\r\nimport NavigationButton from \"./NavigationButton\"\r\nimport Request from \"../Request\"\r\nimport Ellipses from \"../Ellipses\"\r\nimport filterDuplicates from \"../FilterDuplicates\"\r\n\r\nclass Navigation extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      error: null, \r\n      arrOfPages: [],\r\n      pagesQuantity: 0, \r\n      maxLength: 10, \r\n    }\r\n\r\n\r\n  }\r\n\r\n  countPages(type) {\r\n    switch (type) {\r\n      case 'all':\r\n        Request('get_ids', {offset: 0})\r\n        .then((res) => {\r\n          res = filterDuplicates(res)\r\n          this.setState({\r\n            arrOfPages: this.createArray(res.length/50 - 1),\r\n            pagesQuantity: res.length/50\r\n          }, () => {\r\n            this.props.changeParentValue({productQuantity: this.state.pagesQuantity})\r\n          })\r\n        }, (e) => {\r\n          this.handleError(e)\r\n        })\r\n        break;\r\n      case 'filtered':\r\n          this.setState({\r\n            pagesQuantity: Math.ceil(this.props.productQuantity / 50)\r\n          })\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  handleError(e) {\r\n    if (e.name == \"Authorization Error\" || e.name == \"Server Error\") {\r\n      this.setState({\r\n        error: null\r\n      }, () => {\r\n        this.countPages()\r\n      })\r\n    }\r\n  }\r\n  createArray(length) {\r\n    let arrOfPages = []\r\n    for (let i = 1; i < length; i++) {\r\n      arrOfPages.push([i])\r\n    }\r\n    return arrOfPages\r\n  }\r\n/*   correctArray(arr) {\r\n    if (arr.length > this.state.maxLength) {\r\n      arr.splice(this.state.maxLength, arr.length - this.state.maxLength)\r\n    } \r\n    return arr\r\n  } */\r\n\r\n    \r\n\r\n  componentDidMount() {\r\n  }\r\n  componentWillUnmount() { \r\n    if (!this.state.arrOfPages.length) {\r\n      this.countPages('all')\r\n    }\r\n    \r\n    \r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if ((this.props.productQuantity !== prevProps.productQuantity) || \r\n    this.props.name !== prevProps.name ||\r\n    this.props.price !== prevProps.price ||\r\n    this.props.brand !== prevProps.brand) {\r\n      if (this.props.name == null && this.props.price == null && this.props.brand == null) {\r\n        this.countPages('all')\r\n      } else {\r\n        this.countPages('filtered')\r\n      }\r\n        \r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let {error, pagesQuantity, lastPageQuantity, arrOfPages} = this.state\r\n\r\n\r\n    if (error && !error.name == 'Server Error' && !error.name == 'Authorization Error' ) {\r\n      console.log(error)\r\n      return <div className=\"\">Ошибка {error}</div>\r\n    } else if (pagesQuantity == 1) {\r\n      return (\r\n      <nav className=\"navigation-container\" >\r\n        <NavigationButton key = {0} id = {0} page={this.props.page} pagesQuantity={pagesQuantity} lastPageQuantity={lastPageQuantity} />\r\n      </nav>\r\n      )\r\n    }else {\r\n      return (\r\n      <nav className=\"navigation-container\" >\r\n        <NavigationButton key = {0} id = {0} page={this.props.page} pagesQuantity={pagesQuantity} />\r\n        <Ellipses page={this.props.page} id={0} maxLength={this.state.maxLength} pagesQuantity={pagesQuantity}/>\r\n        {arrOfPages.map(item => (\r\n                <NavigationButton key = {item[0]} id = {item[0]} page={this.props.page} pagesQuantity={pagesQuantity}/>\r\n              ))}\r\n        <Ellipses page={this.props.page} id={1} maxLength={this.state.maxLength} pagesQuantity={pagesQuantity}/>\r\n        <NavigationButton key = {pagesQuantity - 1} id = {pagesQuantity - 1} page={this.props.page} pagesQuantity={pagesQuantity} />\r\n      </nav>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Navigation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}